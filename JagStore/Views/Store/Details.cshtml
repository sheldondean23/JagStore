@using System.Web.Mvc.Html
@model JagStore.InvoiceItem

@{
    string name = (string)Session["name"];
    var size = new List<SelectListItem>();
}

@using (Html.BeginForm("AddToCart", "Cart", new { selectedItem = Model }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
<h2>@name</h2>

<div class="form-horizontal">
    <h4>Product Discription</h4>
    <span>
        @{
            switch (name)
            {
                case "Jag T-Shirt":
                    <img src="~/Pictures/Shirt.gif" alt="Jag T-Shirt" height="100" width="100" />
                    break;
                case "Jag Shorts":
                    <img src="~/Pictures/Shorts.gif" alt="Jag Shorts" height="100" width="100" />
                    break;
                case "Jag Polo":
                    <img src="~/Pictures/Polo.gif" alt="Jag Shorts" height="100" width="100" />
                    break;
                case "Hoodie":
                    <img src="~/Pictures/Hoodie.gif" alt="Jag Hoodie" height="100" width="100" />
                    break;
                default:
                    <img src="~/Pictures/CanNotBeFound.gif" alt="Image Not Found" height="100" width="100" />
                    break;
            }
        }
    </span> 
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ProductDiscription.Product.ProductName, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @name
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductDiscription.Color, "Color", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ProductDiscription.Color, (List<SelectListItem>)Session["Pickcolor"], "-- Select Color--", new { id = "colorSelect", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductDiscription.Color, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductDiscription.Size, "Size", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" id="fill" data-get-size-list-url="@Url.Action("getSizeList")">
            @Html.DropDownListFor(model => model.ProductDiscription.Size, size, "-- Select Size--", new { id = "sizeSelect", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductDiscription.Size, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, "Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="show" data-get-price-url="@Url.Action("getPrice")">
        @Html.LabelFor(model => model.ProductDiscription.RetailPrice, "Price", htmlAttributes: new {id = "showPrice", @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.ProductDiscription.RetailPrice)
        </div>
    </div>
    
            @section Scripts {
                <script src="~/Scripts/detailsDropDownList.js"></script>
                @Scripts.Render("~/bundles/jqueryval")
            }
        </div>
        <p>
            <button type="submit">Add to Cart</button> |
            @Html.ActionLink("Back to List", "Index")
        </p>
}
